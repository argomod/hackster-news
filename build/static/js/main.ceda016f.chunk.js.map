{"version":3,"sources":["components/FeaturedArticles.jsx","components/LatestArticles.jsx","components/SideBanner.jsx","components/CategorySort.jsx","App.js","serviceWorker.js","index.js"],"names":["articleList","title","summary","author","image","alt","key","map","item","className","src","FeaturedArticles","props","today","Date","month","pubDate","getMonth","getDate","date","LatestArticles","SideBanner","type","placeholder","Component","CategorySort","App","Fragment","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ceda016f.chunk.js","sourcesContent":["import React from \"react\";\n\nlet articleData = [\n  {\n    title: \"This Apple IIe Robot Is the Best Thing You’ll See Today\",\n    summary:\n      \"It’s the teryifying, clunky, robotic monster of your parents’ Y2K nightmares.\",\n    author: \"Alasdair Allan\",\n    image: \"images/1-apple-bot.jpg\",\n    alt: \"Test\",\n    key: \"1\"\n  },\n  {\n    title: \"Cheap Iot Gadgets Betray You Even After You Toss Them in the Trash\",\n    summary: \"They collect your private data – and then what?\",\n    author: \"Alasdair Allan\",\n    image: \"images/2-iot.jpg\",\n    alt: \"Test\",\n    key: \"2\"\n  },\n  {\n    title: \"Picking the Right Arduino\",\n    summary: \"We’ll help you comb through their 8-bit and 32-bit options.\",\n    author: \"James Lewis\",\n    image: \"images/3-arduino.jpg\",\n    alt: \"Test\",\n    key: \"3\"\n  }\n];\n\nconst articleList = articleData.map(item => {\n  return (\n    <article className=\"featured-article border pb-30 pt-30\" key={item.key}>\n      <div className=\"aspect-ratio-box\">\n        <img alt={item.alt} src={item.image} />\n      </div>\n      <div className=\"featured-article-text\">\n        <h3>{item.title}</h3>\n        <p className=\"article-summary body-m mt-05\">{item.summary}</p>\n        <p className=\"author body-s mt-10 color-pebble\">{item.author}</p>\n      </div>\n    </article>\n  );\n});\n\nconst FeaturedArticles = props => {\n  return (\n    <section className=\"featured-articles-section\">\n      <h5>Featured Articles</h5>\n      {articleList}\n    </section>\n  );\n};\n\nexport default FeaturedArticles;\n","import React from \"react\";\n\nlet today = new Date();\nlet month = [];\nmonth[0] = \"Jan\";\nmonth[1] = \"Feb\";\nmonth[2] = \"Mar\";\nmonth[3] = \"Apr\";\nmonth[4] = \"May\";\nmonth[5] = \"June\";\nmonth[6] = \"July\";\nmonth[7] = \"Aug\";\nmonth[8] = \"Sept\";\nmonth[9] = \"Oct\";\nmonth[10] = \"Nov\";\nmonth[11] = \"Dec\";\nlet pubDate = month[today.getMonth()] + \" \" + (today.getDate() - 1);\n\nlet articleData = [\n  {\n    title: \"“Unexpected” LED Matrix Display\",\n    date: \"27 min ago\",\n    key: \"0\"\n  },\n  {\n    title:\n      \"MIT Researchers Develop RFID System to Improve Robot Picking Accuracy\",\n    date: \"2 hours ago\",\n    key: \"1\"\n  },\n  {\n    title:\n      \"Turn Arduino Sensors Into Long Distance Industrial Sensors with Industruino’s 4–20mA.ker\",\n    date: \"6 hours ago\",\n    key: \"2\"\n  },\n  {\n    title: \"Hackster’s Handpicked Projects of the Week\",\n    date: \"11 hours ago\",\n    key: \"3\"\n  },\n  {\n    title: \"This Outlet Mount Displays [Hides] Your RetroPie Setup in Style\",\n    date: pubDate,\n    key: \"4\"\n  },\n  {\n    title: \"The Problem with Throwing Away a Smart Device…\",\n    date: pubDate,\n    key: \"5\"\n  },\n  {\n    title: \"Review: Polymaker’s Polysher Makes Your 3D Prints Shiny and Smooth\",\n    date: pubDate,\n    key: \"6\"\n  }\n];\n\nconst articleList = articleData.map(item => {\n  return (\n    <article className=\"latest-article border pt-15 pb-15\" key={item.key}>\n      <header>\n        <h4>{item.title}</h4>\n      </header>\n      <div className=\"byline body-s color-pebble mt-05\">\n        <time>{item.date}</time>\n      </div>\n    </article>\n  );\n});\n\nconst LatestArticles = props => {\n  return (\n    <section className=\"latest-articles-section\">\n      <ul className=\"tab-sort border\">\n        <li className=\"tab-active h5-style\">Latest</li>\n        <li className=\"h5-style\">Trending</li>\n      </ul>\n      {articleList}\n    </section>\n  );\n};\n\nexport default LatestArticles;\n","import React, { Component } from \"react\";\n\nclass SideBanner extends Component {\n  render() {\n    return (\n      <aside className=\"side-banner\">\n        <div className=\"banner-ad border pb-30 mb-30\">\n          <img\n            className=\"desktop-banner-ad\"\n            alt=\"Banner ad\"\n            src=\"images/banner-ad.png\"\n          />\n          <img\n            className=\"mobile-banner-ad\"\n            alt=\"Banner ad\"\n            src=\"images/banner-ad-mobile.png\"\n          />\n          <div className=\"ad-label mt-10\">Advertisement</div>\n        </div>\n        <div className=\"newsletter-cta\">\n          <div className=\"newsletetr-cta-text mb-15\">\n            <p className=\"body-l pr-10\">\n              Get our weekly newsletter when you join Hackster.\n            </p>\n            <img src=\"images/spaceman-with-mail.png\" />\n          </div>\n          <input\n            type=\"text\"\n            className=\"newsletter-form mb-10\"\n            placeholder=\"Enter your email\"\n          />\n          <button\n            className=\"button-large button-primary button-full-width\"\n            type=\"submit\"\n          >\n            Sign up\n          </button>\n        </div>\n      </aside>\n    );\n  }\n}\n\nexport default SideBanner;\n","import React from \"react\";\n\nconst CategorySort = props => {\n  return (\n    <ul className=\"category-sort border mb-45\">\n      <li className=\"body-m tab-active\">All</li>\n      <li className=\"body-m\">Drafts</li>\n      <li className=\"body-m\">Submitted</li>\n      <li className=\"body-m\">Scheduled</li>\n      <li className=\"body-m\">Published</li>\n    </ul>\n  );\n};\n\nexport default CategorySort;\n","import React, { Component } from \"react\";\nimport \"./css/reset.css\";\nimport \"./css/general.css\";\nimport \"./css/typography.css\";\nimport FeaturedArticles from \"./components/FeaturedArticles\";\nimport LatestArticles from \"./components/LatestArticles\";\nimport SideBanner from \"./components/SideBanner\";\nimport CategorySort from \"./components/CategorySort\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"mb-45\">News</h1>\n        <CategorySort />\n        <div id=\"top-section\">\n          <FeaturedArticles />\n          <div className=\"separator-1\" />\n          <LatestArticles />\n          <div className=\"separator-2\" />\n          <SideBanner />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}